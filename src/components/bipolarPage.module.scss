@use "sass:map";

$light-text: rgb(240,240,240);
$dark-text: rgb(16,16,16);

$colors: (
  "iceUI": rgb(60,0,200),
  "coolest": rgb(37,7,83),
  "cooler": rgb(142,97,209),
  "cool": rgb(207,204,229),
  "coolUI": rgb(178,171,210),
  "none": rgb(247,247,247),
  "noneUI": rgb(175,175,175),
  "darkUI": rgb(28, 28, 28),
  "warm": rgb(254,224,182),
  "warmUI": rgb(253,184,99),
  "warmer": rgb(241,163,64),
  "warmest": rgb(179,88,6),
  "fireUI": rgb(140,44,0),
);

$text-colors: (
  "iceUI": $light-text,
  "coolest": $light-text,
  "cooler": $dark-text,
  "cool": $dark-text,
  "coolUI": $dark-text,
  "none": $dark-text,
  "noneUI": $dark-text,
  "darkUI": $light-text,
  "warm": $dark-text,
  "warmUI": $dark-text,
  "warmer": $dark-text,
  "warmest": $light-text,
  "fireUI": $light-text,
);

$noise: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='500' height='500'> <filter id='noise' x='0' y='0'> <feTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/> <feBlend mode='screen'/> </filter> <rect width='500' height='500' filter='url(#noise)' opacity='0.5'/> </svg>");

@mixin full-after() {
  content: '';
  width: 100%;
  height: 100%;
	border-radius: 1em;
  pointer-events: none;
  position: absolute;
  display: block;
  top: 0px;
  left: 0px;
}

@mixin dithered-gradient($color) {
  background:
    linear-gradient(to right, transparent, map.get($colors, $color)),
    url(https://grainy-gradients.vercel.app/noise.svg);
  filter: contrast(400%) brightness(600%);
	image-rendering: pixelated;
}

@mixin highlight($color) {
	background-color: map.get($colors, $color);
}

@mixin flat-button() {
  font-size: 1.2em;
  padding: 0px;
	border: none;
}

@mixin category-range($color) {
  .#{$color}-range input[type="range"]::-webkit-slider-thumb {
    background: map.get($colors, $color);
  }
  .#{$color}-range input[type="range"]::-moz-range-thumb {
    background: map.get($colors, $color);
  }
  .#{$color}-range input[type="range"]::-ms-thumb {
    background: map.get($colors, $color);
  }
}

@mixin category($color) {
  button.#{$color} {
    box-shadow: -2px 2px 5px darken(map.get($colors, $color), 80);
  }
  .#{$color} {
    @include highlight($color);
    color: map.get($text-colors, $color);
  }
	.#{$color}Container::after {
		opacity: 0.666;
		@include full-after();
		@include dithered-gradient($color);
	}
	.#{$color}Container {
		position: relative;
	}
	.#{$color}Container * {
		z-index: 1;
	}
  @include category-range($color);
}

$colorList: "iceUI", "coolest", "cooler", "cool", "none", "warm", "warmer", "warmest", "coolUI", "warmUI", "noneUI", "darkUI", "fireUI";
@each $color in $colorList {
  @include category($color)
}
.mainContainer {
  display: grid;
  justify-content: center;
  grid-template-columns: minmax(60vw, 600px);
  grid-template-rows: auto 1fr;
}
.mainContainer p {
	margin-block-start: 0.125em;
  margin-right: 0.25em;
  margin-left: 0.25em;
  font-size: 1.25em;
}
.contentContainer {
  line-height: 1.7em;
	display: inline-block;
  overflow: scroll;
}
.contentContainer * {
	padding: 0.3em;
}
.footer {
  gap: 0.333em;
  display: grid;
	margin-top: 1em;
  justify-items: center;
  justify-content: space-evenly;
}
